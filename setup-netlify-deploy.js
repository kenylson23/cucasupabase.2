#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

function setupNetlifyDeploy() {
  console.log('üîß Configurando arquivos para deploy no Netlify...');
  
  const checks = [
    {
      name: 'netlify.toml',
      path: 'netlify.toml',
      required: true
    },
    {
      name: 'Vite config',
      path: 'vite.config.netlify-auth.ts',
      required: true
    },
    {
      name: 'HTML principal',
      path: 'client/index-netlify-auth.html',
      required: true
    },
    {
      name: 'Redirects SPA',
      path: 'client/public/_redirects',
      required: true
    },
    {
      name: 'Script SQL',
      path: 'supabase-complete-setup.sql',
      required: true
    },
    {
      name: 'Cliente Supabase',
      path: 'client/src/lib/supabaseClient.ts',
      required: true
    },
    {
      name: 'App Netlify Auth',
      path: 'client/src/App-netlify-auth.tsx',
      required: true
    },
    {
      name: 'Main Netlify Auth',
      path: 'client/src/main-netlify-auth.tsx',
      required: true
    }
  ];

  let allFilesReady = true;

  console.log('\nüìã Verificando arquivos necess√°rios:');
  
  checks.forEach(check => {
    const filePath = path.join(__dirname, check.path);
    const exists = fs.existsSync(filePath);
    
    if (exists) {
      console.log(`‚úÖ ${check.name}`);
    } else {
      console.log(`‚ùå ${check.name} - FALTANDO`);
      if (check.required) allFilesReady = false;
    }
  });

  console.log('\nüîç Verificando vari√°veis de ambiente:');
  
  const envVars = ['VITE_SUPABASE_URL', 'VITE_SUPABASE_ANON_KEY'];
  envVars.forEach(envVar => {
    if (process.env[envVar]) {
      console.log(`‚úÖ ${envVar} configurada`);
    } else {
      console.log(`‚ö†Ô∏è  ${envVar} n√£o configurada (necess√°ria no Netlify)`);
    }
  });

  console.log('\nüì¶ Status dos builds:');
  
  const distExists = fs.existsSync(path.join(__dirname, 'dist/public'));
  const indexExists = fs.existsSync(path.join(__dirname, 'dist/public/index.html'));
  
  if (distExists && indexExists) {
    console.log('‚úÖ Build de produ√ß√£o dispon√≠vel');
  } else {
    console.log('‚ö†Ô∏è  Build de produ√ß√£o n√£o encontrado (execute: node build-netlify.js)');
  }

  console.log('\nüìã Checklist para Deploy:');
  console.log('1. Execute o script SQL no Supabase');
  console.log('2. Crie usu√°rio admin no Supabase');
  console.log('3. Configure vari√°veis de ambiente no Netlify');
  console.log('4. Conecte reposit√≥rio ao Netlify');
  console.log('5. Aguarde o deploy autom√°tico');

  if (allFilesReady) {
    console.log('\nüéâ Todos os arquivos est√£o prontos para deploy!');
    return true;
  } else {
    console.log('\n‚ùå Alguns arquivos est√£o faltando. Verifique os erros acima.');
    return false;
  }
}

setupNetlifyDeploy();